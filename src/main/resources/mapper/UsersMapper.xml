<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.zg.mapper.UsersMapper">

    <resultMap id="BaseResultMap" type="priv.zg.domain.Users">
        <id property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="userIp" column="user_ip" jdbcType="VARCHAR"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="userPassword" column="user_password" jdbcType="VARCHAR"/>
        <result property="userEmail" column="user_email" jdbcType="VARCHAR"/>
        <result property="userProfilePhoto" column="user_profile_photo" jdbcType="VARCHAR"/>
        <result property="userRegistrationTime" column="user_registration_time" jdbcType="TIMESTAMP"/>
        <result property="userBirthday" column="user_birthday" jdbcType="DATE"/>
        <result property="userAge" column="user_age" jdbcType="TINYINT"/>
        <result property="userTelephoneNumber" column="user_telephone_number" jdbcType="INTEGER"/>
        <result property="userNickname" column="user_nickname" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        user_id,user_ip,user_name,
        user_password,user_email,user_profile_photo,
        user_registration_time,user_birthday,user_age,
        user_telephone_number,user_nickname
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users
        where user_id = #{userId,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE
        FROM users
        WHERE user_id = #{userId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="priv.zg.domain.Users"
            useGeneratedKeys="true">
        INSERT INTO users
        ( user_id, user_ip, user_name
        , user_password, user_email, user_profile_photo
        , user_registration_time, user_birthday, user_age
        , user_telephone_number, user_nickname)
        VALUES ( #{userId,jdbcType=BIGINT}, #{userIp,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}
               , #{userPassword,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userProfilePhoto,jdbcType=VARCHAR}
               , #{userRegistrationTime,jdbcType=TIMESTAMP}, #{userBirthday,jdbcType=DATE}, #{userAge,jdbcType=TINYINT}
               , #{userTelephoneNumber,jdbcType=INTEGER}, #{userNickname,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="priv.zg.domain.Users"
            useGeneratedKeys="true">
        insert into users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="userIp != null">user_ip,</if>
            <if test="userName != null">user_name,</if>
            <if test="userPassword != null">user_password,</if>
            <if test="userEmail != null">user_email,</if>
            <if test="userProfilePhoto != null">user_profile_photo,</if>
            <if test="userRegistrationTime != null">user_registration_time,</if>
            <if test="userBirthday != null">user_birthday,</if>
            <if test="userAge != null">user_age,</if>
            <if test="userTelephoneNumber != null">user_telephone_number,</if>
            <if test="userNickname != null">user_nickname,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId,jdbcType=BIGINT},</if>
            <if test="userIp != null">#{userIp,jdbcType=VARCHAR},</if>
            <if test="userName != null">#{userName,jdbcType=VARCHAR},</if>
            <if test="userPassword != null">#{userPassword,jdbcType=VARCHAR},</if>
            <if test="userEmail != null">#{userEmail,jdbcType=VARCHAR},</if>
            <if test="userProfilePhoto != null">#{userProfilePhoto,jdbcType=VARCHAR},</if>
            <if test="userRegistrationTime != null">#{userRegistrationTime,jdbcType=TIMESTAMP},</if>
            <if test="userBirthday != null">#{userBirthday,jdbcType=DATE},</if>
            <if test="userAge != null">#{userAge,jdbcType=TINYINT},</if>
            <if test="userTelephoneNumber != null">#{userTelephoneNumber,jdbcType=INTEGER},</if>
            <if test="userNickname != null">#{userNickname,jdbcType=VARCHAR},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="priv.zg.domain.Users">
        update users
        <set>
            <if test="userIp != null">
                user_ip = #{userIp,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                user_password = #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userEmail != null">
                user_email = #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="userProfilePhoto != null">
                user_profile_photo = #{userProfilePhoto,jdbcType=VARCHAR},
            </if>
            <if test="userRegistrationTime != null">
                user_registration_time = #{userRegistrationTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userBirthday != null">
                user_birthday = #{userBirthday,jdbcType=DATE},
            </if>
            <if test="userAge != null">
                user_age = #{userAge,jdbcType=TINYINT},
            </if>
            <if test="userTelephoneNumber != null">
                user_telephone_number = #{userTelephoneNumber,jdbcType=INTEGER},
            </if>
            <if test="userNickname != null">
                user_nickname = #{userNickname,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="priv.zg.domain.Users">
        UPDATE users
        SET user_ip                = #{userIp,jdbcType=VARCHAR},
            user_name              = #{userName,jdbcType=VARCHAR},
            user_password          = #{userPassword,jdbcType=VARCHAR},
            user_email             = #{userEmail,jdbcType=VARCHAR},
            user_profile_photo     = #{userProfilePhoto,jdbcType=VARCHAR},
            user_registration_time = #{userRegistrationTime,jdbcType=TIMESTAMP},
            user_birthday          = #{userBirthday,jdbcType=DATE},
            user_age               = #{userAge,jdbcType=TINYINT},
            user_telephone_number  = #{userTelephoneNumber,jdbcType=INTEGER},
            user_nickname          = #{userNickname,jdbcType=VARCHAR}
        WHERE user_id = #{userId,jdbcType=BIGINT}
    </update>
</mapper>
